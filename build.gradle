plugins {
  id 'java'
  id 'application'
  id 'maven-publish'
  id 'signing'
}

repositories {
  jcenter()
  mavenLocal()
  mavenCentral()
}

task sourcesJar(type: Jar) {
  classifier "sources"
  from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier "javadoc"
  from javadoc.destinationDir
}

mainClassName = 'io.github.artificial-vulnerability-tools.env.Main'
group = 'io.github.artificial-vulnerability-tools'
version = '0.0.1'

ext {
  vertx_version = '3.6.2'
  slf4j_version = '1.7.25'
  junit_version = '4.12'
  logback_version = '1.0.9'
}

dependencies {

  // Vert.X dependencies
  compile group: 'io.vertx', name: 'vertx-core', version: vertx_version
  compile group: 'io.vertx', name: 'vertx-web', version: vertx_version
  compile group: 'io.vertx', name: 'vertx-web-client', version: vertx_version
  testCompile group: 'io.vertx', name: 'vertx-unit', version: vertx_version

  // Logging
  compile group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
  testCompile group: 'ch.qos.logback', name: 'logback-classic', version: logback_version

  // Testing
  testCompile group: 'junit', name: 'junit', version: junit_version
}

// _______________________________
// Custom tasks
task packageTests(type: Jar) {
  baseName = project.name + '-test-fat'
  from configurations.testCompile.collect { it.isDirectory() ? it : zipTree(it) }
  from sourceSets.test.output
  from sourceSets.main.output
  from 'src/main/resources/run_virus.sh'
}

task cleanBinDirs {
  def binDir = new File('.avtenv')
  binDir.deleteDir()
}

// Task dependencies

tasks.test.dependsOn(packageTests)
tasks.clean.dependsOn(cleanBinDirs)

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'emv'
      from components.java
      artifact sourcesJar
      artifact javadocJar
      customizePom(pom)
    }
  }
  repositories {
    maven {
      url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
      credentials {
        username sonatypeUsername
        password sonatypePassword
      }
    }
  }
}

def customizePom(pom) {
  pom.withXml {
    def root = asNode()

    // eliminate test-scoped dependencies (no need in maven central POMs)
    root.dependencies.removeAll { dep ->
      dep.scope == "test"
    }

    // add all items necessary for maven central publication
    root.children().last() + {
      resolveStrategy = Closure.DELEGATE_FIRST

      description 'Artificial environment for epidemic virus spreading'
      name 'env'
      url 'https://github.com/artificial-vulnerability-tools/env'
      organization {
        name 'io.github.artificial-vulnerability-tools'
        url 'https://github.com/artificial-vulnerability-tools'
      }
      issueManagement {
        system 'GitHub'
        url 'https://github.com/artificial-vulnerability-tools/env/issues'
      }
      licenses {
        license {
          name 'Apache License 2.0'
          url 'https://github.com/artificial-vulnerability-tools/env/blob/master/LICENSE'
          distribution 'repo'
        }
      }
      scm {
        url 'https://github.com/artificial-vulnerability-tools/env'
        connection 'scm:git:git://github.com/artificial-vulnerability-tools/env.git'
        developerConnection 'scm:git:ssh://git@github.com:artificial-vulnerability-tools/env.git'
      }
      developers {
        developer {
          name 'Pavel Drankov'
        }
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}